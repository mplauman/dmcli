name: Build and Release

# This workflow handles building release artifacts and creating releases.
# Testing and code quality checks are handled by the CI workflow (ci.yml)
# to avoid duplication. Both workflows run on similar triggers to ensure
# proper validation before releases.

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary
        run: strip target/${{ matrix.target }}/release/dmcli

      - name: Create archive
        run: |
          mkdir -p dist
          tar -czf dist/dmcli-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release dmcli

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dmcli-${{ matrix.target }}
          path: dist/dmcli-${{ matrix.target }}.tar.gz

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-linux
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dmcli-x86_64-unknown-linux-gnu/dmcli-x86_64-unknown-linux-gnu.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
